/*
VÉRIFIER QUE QUAND LA COMMANDE CRÉÉE PEUT L'ÊTRE
SURVEILLER LA TABLE COMMANDE
ARTICLE( NUMCOMMANDE, IDARTICLE , NUMIMPRESSION)


CREATE OR REPLACE TRIGGER CHECK_COMMANDE_MURAL
AFTER INSERT OR UPDATE ON COMMANDE
DECLARE 
   NB_COMMANDE INTEGER;
   STOCK_COMMANDE INTEGER;
BEGIN 

SELECT QUANTITE
FROM ARTICLE NATURAL JOIN COMMANDE NATURAL JOIN IMPRESSION NATURAL JOIN JOURS


SELECT QUANTITESTOCK INTO STOCK_COMMANDE
FROM STOCK 
WHERE TYPE_IMPRESSION='MURAL';
*/

/*
UNE COMMANDE QUI PASSE A OK DOIT AVOIR TOUTES SES IMPRESSIONS OK
*/

/*
QUAND ON AJOUTE UN ARTICLE, VÉRIFIER QUE LE NOMBRE D'IMPRESSION DEMANDÉE EST RÉALISABLE*/

CREATE OR REPLACE TRIGGER ARTICLE_CALENDRIER
BEFORE INSERT OR UPDATE ON ARTICLE
FOR EACH ROW
DECLARE
   COUNT_TMP INTEGER;
   STOCK_MURAL INTEGER;
BEGIN 
-- COMBIEN DE PAGES NECESSAIRE POUR L ARTICLE
-- ERREUR AU DÉBUT DU TRIGGER
   SELECT DISTINCT ID_ARTICLE, MAX(NOPAGEPHOTOCALENDRIER) INTO COUNT_TMP
   
   FROM ARTICLE 
      NATURAL JOIN CALENDRIER 
      NATURAL JOIN PHOTOCALENDRIER 
      NATURAL JOIN MURAL
   WHERE ID_ARTICLE = :NEW.ID_ARTICLE
   GROUP BY ID_ARTICLE;
   
   SELECT QUANTITESTOCK INTO STOCK_MURAL
   FROM STOCK 
   WHERE TYPE_IMPRESSION='CALENDRIER';

   IF (STOCK_MURAL - COUNT_TMP < 10 ) THEN
      RAISE_APPLICATION_ERROR(-20001, 'IMPRESSION PAS POSSIBLE CAR MANQUE DE STOCK');
   END IF;
END;
/
SHOW ERRORS;

-- INSERT INTO ARTICLE VALUES (8, 4, 15.25, 2, 5);


